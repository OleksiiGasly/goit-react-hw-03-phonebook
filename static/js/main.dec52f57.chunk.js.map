{"version":3,"sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/List/List.styled.jsx","components/List/Contact.jsx","components/List/List.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.styled.jsx","App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","onChange","type","pattern","title","required","Component","List","ul","Item","li","Contact","id","onClick","ContactsList","contacts","onDeleteContact","map","contact","Filter","FirstTitle","h1","SecondTitle","h2","App","filter","addContact","newContact","uuidv4","some","alert","tryFilter","console","log","visibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","storedContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dec52f57.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: block;\r\n  margin-left: 22px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 222px;\r\n  height: 30px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-left: 56px;\r\n  margin-top: 10px;\r\n  width: 110px;\r\n  height: 37px;\r\n  color: white;\r\n  background-color: navy;\r\n  border-style: none;\r\n  border-radius: 4px;\r\n`;","import { Component } from 'react';\r\nimport { Form, Label, Input, Button } from './Form.styled';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const { handleSubmit, handleChange } = this;\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Label htmlFor=\"name\">\r\n            Name\r\n            <Input                \r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\r\n                Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n            />\r\n            </Label>\r\n            <Label htmlFor=\"number\">\r\n            Number\r\n            <Input\r\n                onChange={handleChange}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы,\r\n                тире, круглые скобки и может начинаться с +\"\r\n                required\r\n            />\r\n            </Label>\r\n            \r\n            <div>\r\n            <Button type=\"submit\">Add contact</Button>\r\n            </div>\r\n        </Form>\r\n        );\r\n  }\r\n}\r\n\r\nexport default ContactForm","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  padding-left: 22px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\nbackground-color: whitesmoke;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 344px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 88px;\r\n  height: 30px;\r\n  color: white;\r\n  background-color: navy;\r\n  border-style: none;\r\n  border-radius: 4px;\r\n`;","import PropTypes from 'prop-types';\r\nimport { Item, Button } from './List.styled';\r\n\r\nexport const Contact = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <Item key={id}>\r\n      <span>\r\n        {name}: {number}\r\n      </span>\r\n      <Button type=\"button\" onClick={onClick}>\r\n        Delete\r\n      </Button>\r\n    </Item>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\n// export default Contact","import PropTypes from 'prop-types';\r\nimport { Contact } from './Contact';\r\nimport { List } from './List.styled';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <List>\r\n      {contacts.map(contact => (\r\n        <Contact\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onClick={() => onDeleteContact(contact.id)}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\ndisplay: block;\r\nmargin-left: 22px;  \r\nfont-weight: 500;\r\n`","import { Label } from \"./Filter.styled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <Label>\r\n      <p> Find contact by name</p>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </Label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter","import styled from \"@emotion/styled\";\r\n\r\nexport const FirstTitle = styled.h1`\r\n  margin-left: 110px;\r\n`;\r\n\r\nexport const SecondTitle = styled.h2`\r\n  margin-top: 40px;\r\n  margin-left: 144px;\r\n`;","import { Component } from 'react';\nimport Form from './components/Form/Form';\nimport ContactsList from './components/List/List';\nimport Filter from './components/Filter/Filter';\nimport { FirstTitle, SecondTitle } from './App.styled';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {   \n    const storedContacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(storedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts ));\n    }\n  }  \n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.some(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  tryFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n    console.log(e.currentTarget.value);\n  };\n\n  visibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.visibleContacts();\n\n    return (\n      <div>\n        <FirstTitle>Phonebook</FirstTitle>\n        <Form onSubmit={this.addContact} />\n        <SecondTitle>Contacts</SecondTitle>\n        <Filter value={filter} onChange={this.tryFilter} />\n        <ContactsList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}